# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=http://localhost:8081
spring.kafka.producer.properties.specific.avro.reader=true
spring.kafka.producer.properties.auto.register.schemas=true

# Producer Retry Configuration
spring.kafka.producer.properties.retry.backoff.ms=1000
spring.kafka.producer.properties.max.block.ms=90000
spring.kafka.producer.properties.request.timeout.ms=30000
spring.kafka.producer.properties.delivery.timeout.ms=120000

# Consumer Configuration
spring.kafka.consumer.group-id=avro-group
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url=http://localhost:8081
spring.kafka.consumer.properties.specific.avro.reader=true
spring.kafka.consumer.properties.auto.register.schemas=true
spring.kafka.consumer.properties.enable.auto.commit=false
spring.kafka.consumer.properties.auto.commit.interval.ms=5000

# Consumer Retry Configuration
spring.kafka.consumer.properties.retry.backoff.ms=1000
spring.kafka.consumer.properties.reconnect.backoff.ms=1000
spring.kafka.consumer.properties.reconnect.backoff.max.ms=5000
spring.kafka.consumer.properties.session.timeout.ms=45000
spring.kafka.consumer.properties.heartbeat.interval.ms=15000
spring.kafka.consumer.properties.max.poll.interval.ms=300000
spring.kafka.consumer.properties.request.timeout.ms=30000

# Listener Configuration
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.listener.auto-startup=true
spring.kafka.listener.concurrency=1
spring.kafka.listener.poll-timeout=3000
spring.kafka.listener.idle-between-polls=1000

# Server Configuration
server.port=8080

# H2 Database Configuration
spring.datasource.url=jdbc:h2:file:./data/kafkamessages
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Logging Configuration
logging.level.org.springframework.kafka=DEBUG
logging.level.org.apache.kafka=DEBUG
logging.level.com.example.kafkaavro=DEBUG 